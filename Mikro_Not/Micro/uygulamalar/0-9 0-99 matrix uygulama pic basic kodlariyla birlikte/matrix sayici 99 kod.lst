PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 1

     1					
     2					; PicBasic Pro Compiler 2.45a, (c) 1998, 2004 microEngineering Labs, Inc. 
     3	=0001				PM_USED			EQU	1
     4					
     5						INCLUDE	"16F877.INC"
*    1					;****************************************************************
*    2					;*  16F877.INC                                                  *
*    3					;*                                                              *
*    4					;*  By        : Leonard Zerman, Jeff Schmoyer                   *
*    5					;*  Notice    : Copyright (c) 2003 microEngineering Labs, Inc.  *
*    6					;*              All Rights Reserved                             *
*    7					;*  Date      : 11/07/03                                        *
*    8					;*  Version   : 2.45                                            *
*    9					;*  Notes     :                                                 *
*   10					;****************************************************************
*   13					        LIST
*   14					        include 'M16F87x.INC'   ; PM header
*    1					;*************************************************************************
*    2					; PIC16F87x Family Header
*    3					;       Copyright 1995, 2002 microEngineering Labs, Inc.
*    4					;*************************************************************************
*  274					        LIST
*   15					        device  pic16F877, xt_osc, wdt_on, pwrt_on, lvp_off, protect_off
*   16					        XALL
*   25					        LIST
     6					
     7					
     8					; Define statements.
     9					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00018	DEFINE  CODE_SIZE 
    10					#define		CODE_SIZE		 8
    11					
    12	=0020				RAM_START       		EQU	00020h
    13	=01EF				RAM_END         		EQU	001EFh
    14	=0004				RAM_BANKS       		EQU	00004h
    15	=0020				BANK0_START     		EQU	00020h
    16	=007F				BANK0_END       		EQU	0007Fh
    17	=00A0				BANK1_START     		EQU	000A0h
    18	=00EF				BANK1_END       		EQU	000EFh
    19	=0110				BANK2_START     		EQU	00110h
    20	=016F				BANK2_END       		EQU	0016Fh
    21	=0190				BANK3_START     		EQU	00190h
    22	=01EF				BANK3_END       		EQU	001EFh
    23	=2100				EEPROM_START    		EQU	02100h
    24	=21FF				EEPROM_END      		EQU	021FFh
    25					
    26					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00012	R0      VAR     WO
    27	=0020				R0              		EQU	RAM_START + 000h
    28					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00013	R1      VAR     WO
    29	=0022				R1              		EQU	RAM_START + 002h
    30					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00014	R2      VAR     WO
    31	=0024				R2              		EQU	RAM_START + 004h
    32					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00015	R3      VAR     WO
    33	=0026				R3              		EQU	RAM_START + 006h
    34					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00016	R4      VAR     WO
    35	=0028				R4              		EQU	RAM_START + 008h
    36					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00017	R5      VAR     WO
    37	=002A				R5              		EQU	RAM_START + 00Ah
    38					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00018	R6      VAR     WO
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 2

    39	=002C				R6              		EQU	RAM_START + 00Ch
    40					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00019	R7      VAR     WO
    41	=002E				R7              		EQU	RAM_START + 00Eh
    42					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00020	R8      VAR     WO
    43	=0030				R8              		EQU	RAM_START + 010h
    44					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00026	FLAGS   VAR     BY
    45	=0032				FLAGS           		EQU	RAM_START + 012h
    46					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00025	GOP     VAR     BY
    47	=0033				GOP             		EQU	RAM_START + 013h
    48					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00022	RM1     VAR     BY
    49	=0034				RM1             		EQU	RAM_START + 014h
    50					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00024	RM2     VAR     BY
    51	=0035				RM2             		EQU	RAM_START + 015h
    52					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00021	RR1     VAR     BY
    53	=0036				RR1             		EQU	RAM_START + 016h
    54					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\PBPPIC14.RAM	00023	RR2     VAR     BY
    55	=0037				RR2             		EQU	RAM_START + 017h
    56					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00035	i var byte 'for next için
    57	=0038				_i               		EQU	RAM_START + 018h
    58					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00021	kay var byte
    59	=0039				_kay             		EQU	RAM_START + 019h
    60					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00033	p var byte 'pause için
    61	=003A				_p               		EQU	RAM_START + 01Ah
    62					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00022	PORTL   VAR     PO
    63	=0006				_PORTL           		EQU	 PORTB
    64					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00023	PORTH   VAR     PO
    65	=0007				_PORTH           		EQU	 PORTC
    66					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00024	TRISL   VAR     TR
    67	=0086				_TRISL           		EQU	 TRISB
    68					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00025	TRISH   VAR     TR
    69	=0087				_TRISH           		EQU	 TRISC
    70					
    71					; Constants.
    72	=0000				_T2400           		EQU	00000h
    73	=0001				_T1200           		EQU	00001h
    74	=0002				_T9600           		EQU	00002h
    75	=0003				_T300            		EQU	00003h
    76	=0004				_N2400           		EQU	00004h
    77	=0005				_N1200           		EQU	00005h
    78	=0006				_N9600           		EQU	00006h
    79	=0007				_N300            		EQU	00007h
    80	=0008				_OT2400          		EQU	00008h
    81	=0009				_OT1200          		EQU	00009h
    82	=000A				_OT9600          		EQU	0000Ah
    83	=000B				_OT300           		EQU	0000Bh
    84	=000C				_ON2400          		EQU	0000Ch
    85	=000D				_ON1200          		EQU	0000Dh
    86	=000E				_ON9600          		EQU	0000Eh
    87	=000F				_ON300           		EQU	0000Fh
    88	=0000				_MSBPRE          		EQU	00000h
    89	=0001				_LSBPRE          		EQU	00001h
    90	=0002				_MSBPOST         		EQU	00002h
    91	=0003				_LSBPOST         		EQU	00003h
    92	=0000				_LSBFIRST        		EQU	00000h
    93	=0001				_MSBFIRST        		EQU	00001h
    94	=0000				_CLS             		EQU	00000h
    95	=0001				_HOME            		EQU	00001h
    96	=0007				_BELL            		EQU	00007h
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 3

    97	=0008				_BKSP            		EQU	00008h
    98	=0009				_TAB             		EQU	00009h
    99	=000D				_CR              		EQU	0000Dh
   100	=0012				_UnitOn          		EQU	00012h
   101	=001A				_UnitOff         		EQU	0001Ah
   102	=001C				_UnitsOff        		EQU	0001Ch
   103	=0014				_LightsOn        		EQU	00014h
   104	=0010				_LightsOff       		EQU	00010h
   105	=001E				_Dim             		EQU	0001Eh
   106	=0016				_Bright          		EQU	00016h
   107						INCLUDE	"MATRIX~1.MAC"
*    1					
*   45						LIST
   108						INCLUDE	"PBPPIC14.LIB"
*    1					;******************************************************************
*    2					;*  PBPPIC14.LIB                                                  *
*    3					;*                                                                *
*    4					;*  By        : Leonard Zerman, Jeff Schmoyer                     *
*    5					;*  Notice    : Copyright (c) 2004 microEngineering Labs, Inc.    *
*    6					;*              All Rights Reserved                               *
*    7					;*  Date      : 01/06/04                                          *
*    8					;*  Version   : 2.45                                              *
*    9					;*  Notes     :                                                   *
*   10					;******************************************************************
*   45					  LIST
*   46					; Oscillator is 4MHz
* 1110					  LIST
* 1111					    ORG 0                       ; Reset vector at 0
* 1125					  LIST
* 1126	0000- 2828			        goto    INIT            ; Finish initialization
* 6133					  LIST
* 6134	0001- 01A3			PAUSE   clrf    R1 + 1
* 6135	0002- 00A2			PAUSEL  movwf   R1
* 6136	0003- 30FF			pauseloop movlw -1              ; 1 (9)
* 6137	0004- 07A2			        addwf   R1, F           ; 1
* 6138	0005- 1C03			        btfss   STATUS, C       ; 1 / 2
* 6139	0006- 07A3			        addwf   R1 + 1, F       ; 1 / 0
* 6140	0007- 1C03			        btfss   STATUS, C       ; 2
* 6141	0008- 2823			        goto    DONE
* 6142	0009- 3003			        movlw   (PAUSE_DELAY) >> 8      ; 1
* 6143	000A- 00A1			        movwf   R0 + 1          ; 1
* 6144	000B- 30DF			        movlw   low (PAUSE_DELAY)       ; 1
* 6145	000C- 200F			        call    PAUSEUSL        ; -2 (PAUSEUSL gives you 2 less than you a
* 6146	000D- 2803			        goto    pauseloop       ; 2
* 6190					  LIST
* 6191	000E- 01A1			PAUSEUS clrf    R0 + 1          ; 1
* 6192	000F- 3EE8			PAUSEUSL addlw  -24             ; 1 Subtract overhead
* 6193	0010- 00A0			        movwf   R0              ; 1
* 6194	0011- 09A1			        comf    R0 + 1, F       ; 1
* 6195	0012- 30FC			        movlw   -4              ; 1
* 6196	0013- 1C03			        btfss   STATUS, C       ; 1 / 2
* 6197	0014- 2818			        goto    pauseush        ; 2 / 0
* 6198	0015- 07A0			pauseusloop addwf R0, F         ; 1
* 6199	0016- 1803			        btfsc   STATUS, C       ; 1 / 2
* 6200	0017- 2815			        goto    pauseusloop     ; 2 / 0
* 6201	0018- 07A0			pauseush addwf  R0, F           ; 1 Do an extra countdown
* 6202					        CLRWDT?NOP		; 1 Keep Watchdog clear
     +	0019- 0064			        clrwdt
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 4

* 6203	001A- 0FA1			        incfsz  R0 + 1, F       ; 1 / 2
* 6204	001B- 2815			        goto    pauseusloop     ; 2 / 0
* 6205	001C- 1820			        btfsc   R0, 0           ; 1 / 2
* 6206	001D- 281E			        goto    $ + 1           ; 2 / 0 Burn an extra cycle
* 6207	001E- 1CA0			        btfss   R0, 1           ; 1 / 2
* 6208	001F- 2822			        goto    pauseusdone     ; 2 / 0
* 6209	0020- 0000			        nop                     ; 1
* 6210	0021- 2822			        goto    $ + 1           ; 2 Burn an extra 2 cycles
* 6211	0022- 0008			pauseusdone return              ; 2 + 3 (call + setup)
* 7398					  LIST
* 7399	0023- 1383			DONE    bcf     STATUS, IRP     ; 1 Set FSR to bank 0/1
* 7400	0024- 1303			        bcf     STATUS, RP1     ; 1 Show direct bank 0
* 7401	0025- 1283			        bcf     STATUS, RP0     ; 1
* 7402					        CLRWDT?NOP		; 1 Hit Watchdog timer
     +	0026- 0064			        clrwdt
* 7403	0027- 0008			DONERET return                  ; 2 Done
* 7427					  LIST
* 7428	0028-				INIT
* 7466					  LIST
* 7467	0028-				main
   109					
   110					
   111					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00012	BANK0   $0020, $00
   112					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00013	BANK1   $00A0, $00
   113					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00014	BANK2   $0110, $01
   114					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00015	BANK3   $0190, $01
   115					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00016	EEPROM  $2100, $21
   116					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00017	LIBRARY "PBPPIC14"
   117					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00018	DEFINE  CODE_SIZE 
   118					
   119					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00020	        include "P
   120					
   121					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\16F877.BAS	00027	        include "P
   122					
   123					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00002	include "modedefs.bas"
   124					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00014	Symbol T2400  = 0 
   125					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00015	Symbol T1200  = 1 
   126					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00016	Symbol T9600  = 2 
   127					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00017	Symbol T300   = 3 
   128					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00019	Symbol N2400  = 4 
   129					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00020	Symbol N1200  = 5 
   130					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00021	Symbol N9600  = 6 
   131					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00022	Symbol N300   = 7 
   132					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00024	Symbol OT2400 = 8 
   133					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00025	Symbol OT1200 = 9 
   134					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00026	Symbol OT9600 = 10
   135					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00027	Symbol OT300  = 11
   136					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00029	Symbol ON2400 = 12
   137					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00030	Symbol ON1200 = 13
   138					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00031	Symbol ON9600 = 14
   139					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00032	Symbol ON300  = 15
   140					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00036	Symbol MSBPRE = 0 
   141					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00037	Symbol LSBPRE = 1 
   142					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00038	Symbol MSBPOST = 2
   143					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00039	Symbol LSBPOST = 3
   144					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00042	Symbol LSBFIRST = 
   145					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00043	Symbol MSBFIRST = 
   146					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00047	Symbol CLS = 0
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 5

   147					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00048	Symbol HOME = 1
   148					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00049	Symbol BELL = 7
   149					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00050	Symbol BKSP = 8
   150					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00051	Symbol TAB = 9
   151					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00052	Symbol CR = 13
   152					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00056	Symbol UnitOn = %1
   153					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00057	Symbol UnitOff = %
   154					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00058	Symbol UnitsOff = 
   155					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00059	Symbol LightsOn = 
   156					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00060	Symbol LightsOff =
   157					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00061	Symbol Dim = %1111
   158					; F:\ISTEMP~1\MECANI~1\MCS\PBP245\MODEDEFS.BAS	00062	Symbol Bright = %1
   159					
   160					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00004	trisa=0
   161						MOVE?CB	000h, TRISA
     +	0028- 1683			        bsf     STATUS, RP0
     +	0029- 0185			        clrf    TRISA
   162					
   163					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00005	trisb=0
   164						MOVE?CB	000h, TRISB
     +	002A- 0186			        clrf    TRISB
   165					
   166					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00006	trisc=0
   167						MOVE?CB	000h, TRISC
     +	002B- 0187			        clrf    TRISC
   168					
   169					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00007	trisd=0
   170						MOVE?CB	000h, TRISD
     +	002C- 0188			        clrf    TRISD
   171					
   172					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00009	porta=0
   173						MOVE?CB	000h, PORTA
     +	002D- 1283			        bcf     STATUS, RP0
     +	002E- 0185			        clrf    PORTA
   174					
   175					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00010	portb=0
   176						MOVE?CB	000h, PORTB
     +	002F- 0186			        clrf    PORTB
   177					
   178					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00011	portc=0
   179						MOVE?CB	000h, PORTC
     +	0030- 0187			        clrf    PORTC
   180					
   181					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00012	portd=0
   182						MOVE?CB	000h, PORTD
     +	0031- 0188			        clrf    PORTD
   183					
   184					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00014	pause 300
   185						PAUSE?C	0012Ch
     +	0032- 3001			        movlw   low (high (0012Ch))
     +	0033- 00A3			        movwf   R1 + 1
     +	0034- 302C			        movlw   low (low (0012Ch))
     +	0035- 018A				clrf	PCLATH
     +	0036- 2002			        call    PAUSEL
   186					
   187					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00022	kay=%00000001
   188						MOVE?CB	001h, _kay
     +	0037- 3001			        movlw   low (001h)
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 6

     +	0038- 00B9			        movwf   _kay
   189					
   190					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00034	p=100
   191						MOVE?CB	064h, _p
     +	0039- 3064			        movlw   low (064h)
     +	003A- 00BA			        movwf   _p
   192					
   193					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00036	i=0
   194						MOVE?CB	000h, _i
     +	003B- 01B8			        clrf    _i
   195					
   196					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00065	basla:
   197					
   198						LABEL?L	_basla	
     +					        LALL
     +	003C-				_basla
   199					
   200					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00071	portb=00000001'kay
   201						MOVE?CB	001h, PORTB
     +	003C- 3001			        movlw   low (001h)
     +	003D- 0086			        movwf   PORTB
   202					
   203					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00073	portc=%00000001
   204						MOVE?CB	001h, PORTC
     +	003E- 3001			        movlw   low (001h)
     +	003F- 0087			        movwf   PORTC
   205					
   206					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00074	pause p
   207						PAUSE?B	_p
     +	0040- 083A			        movf    _p, W
     +	0041- 018A				clrf	PCLATH
     +	0042- 2001			        call    PAUSE
   208					
   209					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00075	portc=%00000010
   210						MOVE?CB	002h, PORTC
     +	0043- 3002			        movlw   low (002h)
     +	0044- 0087			        movwf   PORTC
   211					
   212					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00076	pause p
   213						PAUSE?B	_p
     +	0045- 083A			        movf    _p, W
     +	0046- 018A				clrf	PCLATH
     +	0047- 2001			        call    PAUSE
   214					
   215					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00077	portc=%00000100
   216						MOVE?CB	004h, PORTC
     +	0048- 3004			        movlw   low (004h)
     +	0049- 0087			        movwf   PORTC
   217					
   218					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00078	pause p
   219						PAUSE?B	_p
     +	004A- 083A			        movf    _p, W
     +	004B- 018A				clrf	PCLATH
     +	004C- 2001			        call    PAUSE
   220					
   221					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00079	portc=%00001000
   222						MOVE?CB	008h, PORTC
     +	004D- 3008			        movlw   low (008h)
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 7

     +	004E- 0087			        movwf   PORTC
   223					
   224					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00080	pause p
   225						PAUSE?B	_p
     +	004F- 083A			        movf    _p, W
     +	0050- 018A				clrf	PCLATH
     +	0051- 2001			        call    PAUSE
   226					
   227					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00081	portc=%00010000
   228						MOVE?CB	010h, PORTC
     +	0052- 3010			        movlw   low (010h)
     +	0053- 0087			        movwf   PORTC
   229					
   230					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00082	pause p
   231						PAUSE?B	_p
     +	0054- 083A			        movf    _p, W
     +	0055- 018A				clrf	PCLATH
     +	0056- 2001			        call    PAUSE
   232					
   233					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00083	portc=%00100000
   234						MOVE?CB	020h, PORTC
     +	0057- 3020			        movlw   low (020h)
     +	0058- 0087			        movwf   PORTC
   235					
   236					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00084	pause p
   237						PAUSE?B	_p
     +	0059- 083A			        movf    _p, W
     +	005A- 018A				clrf	PCLATH
     +	005B- 2001			        call    PAUSE
   238					
   239					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00085	portc=%01000000
   240						MOVE?CB	040h, PORTC
     +	005C- 3040			        movlw   low (040h)
     +	005D- 0087			        movwf   PORTC
   241					
   242					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00086	pause p
   243						PAUSE?B	_p
     +	005E- 083A			        movf    _p, W
     +	005F- 018A				clrf	PCLATH
     +	0060- 2001			        call    PAUSE
   244					
   245					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00087	portc=%10000000
   246						MOVE?CB	080h, PORTC
     +	0061- 3080			        movlw   low (080h)
     +	0062- 0087			        movwf   PORTC
   247					
   248					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00088	pause p
   249						PAUSE?B	_p
     +	0063- 083A			        movf    _p, W
     +	0064- 018A				clrf	PCLATH
     +	0065- 2001			        call    PAUSE
   250					
   251					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00090	portd=%00000001
   252						MOVE?CB	001h, PORTD
     +	0066- 3001			        movlw   low (001h)
     +	0067- 0088			        movwf   PORTD
   253					
   254					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00091	pause p
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 8

   255						PAUSE?B	_p
     +	0068- 083A			        movf    _p, W
     +	0069- 018A				clrf	PCLATH
     +	006A- 2001			        call    PAUSE
   256					
   257					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00092	portd=%00000010
   258						MOVE?CB	002h, PORTD
     +	006B- 3002			        movlw   low (002h)
     +	006C- 0088			        movwf   PORTD
   259					
   260					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00093	pause p
   261						PAUSE?B	_p
     +	006D- 083A			        movf    _p, W
     +	006E- 018A				clrf	PCLATH
     +	006F- 2001			        call    PAUSE
   262					
   263					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00094	portd=%00000100
   264						MOVE?CB	004h, PORTD
     +	0070- 3004			        movlw   low (004h)
     +	0071- 0088			        movwf   PORTD
   265					
   266					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00095	pause p
   267						PAUSE?B	_p
     +	0072- 083A			        movf    _p, W
     +	0073- 018A				clrf	PCLATH
     +	0074- 2001			        call    PAUSE
   268					
   269					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00096	portd=%00001000
   270						MOVE?CB	008h, PORTD
     +	0075- 3008			        movlw   low (008h)
     +	0076- 0088			        movwf   PORTD
   271					
   272					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00097	pause p
   273						PAUSE?B	_p
     +	0077- 083A			        movf    _p, W
     +	0078- 018A				clrf	PCLATH
     +	0079- 2001			        call    PAUSE
   274					
   275					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00098	portd=%00010000
   276						MOVE?CB	010h, PORTD
     +	007A- 3010			        movlw   low (010h)
     +	007B- 0088			        movwf   PORTD
   277					
   278					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00099	pause p
   279						PAUSE?B	_p
     +	007C- 083A			        movf    _p, W
     +	007D- 018A				clrf	PCLATH
     +	007E- 2001			        call    PAUSE
   280					
   281					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00100	portd=%00100000
   282						MOVE?CB	020h, PORTD
     +	007F- 3020			        movlw   low (020h)
     +	0080- 0088			        movwf   PORTD
   283					
   284					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00101	pause p
   285						PAUSE?B	_p
     +	0081- 083A			        movf    _p, W
     +	0082- 018A				clrf	PCLATH
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 9

     +	0083- 2001			        call    PAUSE
   286					
   287					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00102	portd=%01000000
   288						MOVE?CB	040h, PORTD
     +	0084- 3040			        movlw   low (040h)
     +	0085- 0088			        movwf   PORTD
   289					
   290					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00103	pause p
   291						PAUSE?B	_p
     +	0086- 083A			        movf    _p, W
     +	0087- 018A				clrf	PCLATH
     +	0088- 2001			        call    PAUSE
   292					
   293					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00104	portd=%10000000
   294						MOVE?CB	080h, PORTD
     +	0089- 3080			        movlw   low (080h)
     +	008A- 0088			        movwf   PORTD
   295					
   296					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00105	pause p
   297						PAUSE?B	_p
     +	008B- 083A			        movf    _p, W
     +	008C- 018A				clrf	PCLATH
     +	008D- 2001			        call    PAUSE
   298					
   299					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00107	porta=%0001
   300						MOVE?CB	001h, PORTA
     +	008E- 3001			        movlw   low (001h)
     +	008F- 0085			        movwf   PORTA
   301					
   302					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00108	pause p
   303						PAUSE?B	_p
     +	0090- 083A			        movf    _p, W
     +	0091- 018A				clrf	PCLATH
     +	0092- 2001			        call    PAUSE
   304					
   305					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00109	porta=%0010
   306						MOVE?CB	002h, PORTA
     +	0093- 3002			        movlw   low (002h)
     +	0094- 0085			        movwf   PORTA
   307					
   308					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00110	pause p
   309						PAUSE?B	_p
     +	0095- 083A			        movf    _p, W
     +	0096- 018A				clrf	PCLATH
     +	0097- 2001			        call    PAUSE
   310					
   311					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00111	porta=%0100
   312						MOVE?CB	004h, PORTA
     +	0098- 3004			        movlw   low (004h)
     +	0099- 0085			        movwf   PORTA
   313					
   314					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00112	pause p
   315						PAUSE?B	_p
     +	009A- 083A			        movf    _p, W
     +	009B- 018A				clrf	PCLATH
     +	009C- 2001			        call    PAUSE
   316					
   317					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00113	porta=%1000
PM Assembler 4.06, Copyright (c) 1995, 2003 microEngineering Labs, Inc.					Page 10

   318						MOVE?CB	008h, PORTA
     +	009D- 3008			        movlw   low (008h)
     +	009E- 0085			        movwf   PORTA
   319					
   320					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00178	goto basla
   321						GOTO?L	_basla
     +	009F- 018A				clrf	PCLATH
     +	00A0- 283C			        goto    _basla
   322					
   323					; H:\20DÖNE~1\MATRIX~1\MATRIX~1.PBP	00281	end
   324						END?	
     +	00A1- 0063			@@0000    sleep
     +	00A2- 018A				clrf	PCLATH
     +	00A3- 28A1			        goto    @@0000
   325					
   326						END
